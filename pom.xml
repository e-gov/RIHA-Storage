<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ee.eesti.riha</groupId>
	<artifactId>rest</artifactId>
	<version>0.17.5</version>
	<packaging>war</packaging>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.6</version>
		<relativePath/>
	</parent>

	<name>RIHA-Storage</name>
	<description>Application providing REST API for RIHA database.</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>11</java.version>

		<liquibase.version>3.5.3</liquibase.version>
		<cxf.version>3.1.6</cxf.version>

		<!-- See Profile <id>${project.groupId}-${project.artifactId}}</id> below! -->
		<riharest.test.pathRoot>target/test-files/</riharest.test.pathRoot>
		<riharest.test.pathRootWindows>${riharest.pathRootWindows}</riharest.test.pathRootWindows>
		<riharest.test.authService>${riharest.authService}</riharest.test.authService>
		<riharest.test.isTest>${riharest.isTest}</riharest.test.isTest>
		<riharest.test.authTimeout>${riharest.authTimeout}</riharest.test.authTimeout>

		<!-- Performance test settings: -->
		<jmeter.skip>false</jmeter.skip>
		<jmeter.test>rest-get-object</jmeter.test>
		<jmeter.host>triinu.girf.ee</jmeter.host>
		<jmeter.port>8010</jmeter.port>
		<jmeter.parallelRequests>1</jmeter.parallelRequests>
		<jmeter.ignoreFailures>true</jmeter.ignoreFailures>
		<jmeter.suppressOutput>false</jmeter.suppressOutput>
		<jmeter.rampUpPeriod>10</jmeter.rampUpPeriod>
		<jmeter.loopCount>1</jmeter.loopCount>
	</properties>

	<profiles>
		<profile>
			<id>${project.groupId}-${project.artifactId}</id>
			
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			
			<properties>
				<!-- Properties in resource files: -->
				<riharest.pathRoot>/opt/riha/</riharest.pathRoot>
				<riharest.isTest>true</riharest.isTest>
				<riharest.authTimeout>3600000</riharest.authTimeout>
				<riharest.base.url>http://localhost:8080/rest</riharest.base.url>
				<riharest.authService>http://localhost:8080/riha/sessionManagementServlet</riharest.authService>
				
				<!-- Note the trailing slash! -->
				<riharest.pathRootWindows>C:\\test_folder\\</riharest.pathRootWindows>
			</properties>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-json-provider</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
			<version>${liquibase.version}</version>
		</dependency>

		<!-- rest client is needed for authentication requests -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxrs</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-rs-client</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-local</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>


		<!-- embedded postgres -->
		<dependency>
			<groupId>ru.yandex.qatools.embed</groupId>
			<artifactId>postgresql-embedded</artifactId>
			<version>2.10</version>
			<scope>test</scope>
		</dependency>

		<!-- other -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-csv</artifactId>
			<version>1.5</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>4.0.1</version>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<configuration>
						<skipSource>true</skipSource>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5.3</version>
					<configuration>
						<autoVersionSubmodules>true</autoVersionSubmodules>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.19.1</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.2</version>
				<executions>
					<execution>
						<id>jacoco-initialize</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<useSystemClassLoader>false</useSystemClassLoader>
					<excludes>
						<exclude>**/integration/**.java</exclude>
						<exclude>**/integration/*/**.java</exclude>
					</excludes>
					<includes>
						<include>DAOTestSuite.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.9.1</version>
				<executions>
					<execution>
						<id>reserve-network-port</id>
						<goals>
							<goal>reserve-network-port</goal>
						</goals>
						<phase>process-test-resources</phase>
						<configuration>
							<portNames>
								<portName>test.server.port</portName>
							</portNames>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!--<plugin>-->
				<!--<groupId>org.apache.maven.plugins</groupId>-->
				<!--<artifactId>maven-failsafe-plugin</artifactId>-->
				<!--<version>2.18.1</version>-->

				<!--<configuration>-->
					<!--<argLine>-Xmx2048m -XX:MaxPermSize=1024m</argLine>-->
					<!--<environmentVariables>-->
						<!--<serviceurl>http://localhost:${test.server.port}/rest</serviceurl>-->
					<!--</environmentVariables>-->

					<!--<includes>-->
						<!--<include>**/integration/**.java</include>-->
						<!--<include>**/integration/*/**.java</include>-->
					<!--</includes>-->

					<!--<encoding>UTF-8</encoding>-->

				<!--</configuration>-->

				<!--<executions>-->
					<!--<execution>-->
						<!--<goals>-->
							<!--<goal>integration-test</goal>-->
							<!--<goal>verify</goal>-->
						<!--</goals>-->
					<!--</execution>-->
				<!--</executions>-->

			<!--</plugin>-->

			<!--<plugin>-->
				<!--<groupId>com.lazerycode.jmeter</groupId>-->
				<!--<artifactId>jmeter-maven-plugin</artifactId>-->
				<!--<version>2.0.3</version>-->
				<!--<configuration>-->
					<!--<propertiesJMeter>-->
						<!--<log_level.jmeter>DEBUG</log_level.jmeter>-->
					<!--</propertiesJMeter>-->
					<!--<testFilesIncluded>-->
						<!--<jMeterTestFile>${jmeter.test}.jmx</jMeterTestFile>-->
					<!--</testFilesIncluded>-->
					<!--<testResultsTimestamp>false</testResultsTimestamp>-->
					<!--<overrideRootLogLevel>DEBUG</overrideRootLogLevel>-->
					<!--<suppressJMeterOutput>${jmeter.suppressOutput}</suppressJMeterOutput>-->
					<!--<ignoreResultFailures>${jmeter.ignoreFailures}</ignoreResultFailures>-->

					<!--<skipTests>${jmeter.skip}</skipTests>-->
					<!--<propertiesUser>-->
						<!--<restApiHost>${jmeter.host}</restApiHost>-->
						<!--<restApiPort>${jmeter.port}</restApiPort>-->
						<!--<parallelRequests>${jmeter.parallelRequests}</parallelRequests>-->
						<!--<rampUpPeriod>${jmeter.rampUpPeriod}</rampUpPeriod>-->
						<!--<loopCount>${jmeter.loopCount}</loopCount>-->
					<!--</propertiesUser>-->
					<!--&lt;!&ndash; propertiesJMeter> <jmeter.save.saveservice.thread_counts>true</jmeter.save.saveservice.thread_counts> -->
						<!--</propertiesJMeter &ndash;&gt;-->
					<!--<jmeterExtensions>-->
						<!--<artifact>kg.apc:jmeter-plugins-json:jar:2.3</artifact>-->
					<!--</jmeterExtensions>-->
				<!--</configuration>-->
			<!--</plugin>-->


			<!--<plugin>-->
				<!--<groupId>org.apache.maven.plugins</groupId>-->
				<!--<artifactId>maven-antrun-plugin</artifactId>-->
		<!---->
				<!--<executions>-->
					<!--&lt;!&ndash; use real PATH_ROOT in integration tests &ndash;&gt;-->
					<!--<execution>-->
		<!---->
						<!--<id>set_actual.riharest.path_root</id>-->
		<!---->
						<!--<phase>pre-integration-test</phase>-->
		<!---->
						<!--<goals>-->
							<!--<goal>run</goal>-->
						<!--</goals>-->
		<!---->
						<!--<configuration>-->
							<!--<target>-->
								<!--<propertyfile-->
									<!--file="${project.build.testOutputDirectory}/riharest.project.properties">-->
									<!--<entry key="PATH_ROOT" value="${riharest.pathRoot}" />-->
								<!--</propertyfile>-->
							<!--</target>-->
						<!--</configuration>-->
					<!--</execution>-->
					<!---->
					<!--&lt;!&ndash; change PATH_ROOT back to test value after integration tests&ndash;&gt;-->
					<!--<execution>-->
		<!---->
						<!--<id>set_test.riharest.path_root</id>-->
		<!---->
						<!--<phase>post-integration-test</phase>-->
		<!---->
						<!--<goals>-->
							<!--<goal>run</goal>-->
						<!--</goals>-->
		<!---->
						<!--<configuration>-->
							<!--<target>-->
								<!--<propertyfile-->
									<!--file="${project.build.testOutputDirectory}/riharest.project.properties">-->
									<!--<entry key="PATH_ROOT" value="${riharest.test.pathRoot}" />-->
								<!--</propertyfile>-->
							<!--</target>-->
						<!--</configuration>-->
					<!--</execution>-->
				<!--</executions>-->
			<!--</plugin>-->

		</plugins>
	</build>
</project>
